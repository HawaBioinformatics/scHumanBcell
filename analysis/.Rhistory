library(Seurat)
library(tidyverse)
library(clustifyr)
library(ggplot2)
library(cowplot)
library(Seurat)
library(tidyverse)
# this returns a seurat object
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
library(tidyverse)
library(Seurat)
library(clustifyr)
library(ggplot2)
library(cowplot)
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
library(tidyverse)
library(Seurat)
library(clustifyr)
library(ggplot2)
library(cowplot)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
## getting help
?CreateSeuratObject
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD20", "CD34", "CD38", "MS4A1"), 1:30]
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19"), 1:30]
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD20"), 1:30]
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD34", "CD38", "MS4A1"), 1:30]
## check at metadata
head(pbmc@meta.data)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
pbmc@meta.data %>% head()
# Visualize QC metrics as a violin plot
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 3000 & percent.mt < 20)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 3000 & percent.mt < 20)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(pbmc), 10)
# plot variable features with and without labels
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2), ncol =1)
library(stats)
x <- matrix(1:15, ncol = 3)
x
## scale works in a column-wise fashion
centered.x <- scale(x, scale = FALSE)
centered.x
## variance is 1
centered.scaled.x <- scale(x)
cov(centered.scaled.x)
library(tidyverse)
library(Seurat)
library(clustifyr)
library(ggplot2)
library(cowplot)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
## getting help
?CreateSeuratObject
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD34", "CD38", "MS4A1"), 1:30]
## check at metadata
head(pbmc@meta.data)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
pbmc@meta.data %>% head()
# Visualize QC metrics as a violin plot
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 3000 & percent.mt < 20)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(pbmc), 10)
# plot variable features with and without labels
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2), ncol =1)
cc.genes.updated.2019
s.genes <- cc.genes.updated.2019$s.genes
g2m.genes <- cc.genes.updated.2019$g2m.genes
pbmc.2k <- CellCycleScoring(pbmc.2k, s.features = s.genes, g2m.features = g2m.genes)
s.genes <- cc.genes.updated.2019$s.genes
g2m.genes <- cc.genes.updated.2019$g2m.genes
pbmc.2k <- CellCycleScoring(pbmc, s.features = s.genes, g2m.features = g2m.genes)
table(pbmc[[]]$Phase)
s.genes <- cc.genes.updated.2019$s.genes
g2m.genes <- cc.genes.updated.2019$g2m.genes
pbmc <- CellCycleScoring(pbmc, s.features = s.genes, g2m.features = g2m.genes)
table(pbmc[[]]$Phase)
library(stats)
x <- matrix(1:15, ncol = 3)
x
## scale works in a column-wise fashion
centered.x <- scale(x, scale = FALSE)
centered.x
## variance is 1
centered.scaled.x <- scale(x)
cov(centered.scaled.x)
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- ScaleData(pbmc, features = all.genes, vars.to.regress = c("percent.mt","S.Score","G2M.Score"))
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes, vars.to.regress = c("percent.mt","S.Score","G2M.Score"))
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["RNA"]]@counts[1:6, 1:6]
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["data"]]@counts[1:6, 1:6]
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["RNA"]]@counts[1:6, 1:6]
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["RNA"]]$counts[1:6, 1:6]
# library size normalized and log transformed data
pbmc[["RNA"]]@data[1:6, 1:6]
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["RNA"]]$counts[1:6, 1:6]
# library size normalized and log transformed data
pbmc[["RNA"]]$data[1:6, 1:6]
# scaled data
pbmc[["RNA"]]$scale.data[1:6, 1:6]
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt", "S.Score","G2M.Score")
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["RNA"]]@counts[1:6, 1:6]
library(Seurat)
library(tidyverse)
# this returns a seurat object
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
head(pbmc.2k@meta.data)
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt","S.Score","G2M.Score")
library(tidyverse)
library(Seurat)
library(clustifyr)
library(ggplot2)
library(cowplot)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
## getting help
?CreateSeuratObject
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD34", "CD38", "MS4A1"), 1:30]
## check at metadata
head(pbmc@meta.data)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
pbmc@meta.data %>% head()
# Visualize QC metrics as a violin plot
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 3000 & percent.mt < 20)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(pbmc), 10)
# plot variable features with and without labels
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2), ncol =1)
cc.genes.updated.2019
s.genes <- cc.genes.updated.2019$s.genes
g2m.genes <- cc.genes.updated.2019$g2m.genes
pbmc <- CellCycleScoring(pbmc, s.features = s.genes, g2m.features = g2m.genes)
table(pbmc[[]]$Phase)
library(stats)
x <- matrix(1:15, ncol = 3)
x
## scale works in a column-wise fashion
centered.x <- scale(x, scale = FALSE)
centered.x
## variance is 1
centered.scaled.x <- scale(x)
cov(centered.scaled.x)
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["RNA"]]$counts[1:6, 1:6]
# library size normalized and log transformed data
pbmc[["RNA"]]$data[1:6, 1:6]
# scaled data
pbmc[["RNA"]]$scale.data[1:6, 1:6]
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt","S.Score","G2M.Score")
library(tidyverse)
library(Seurat)
library(clustifyr)
library(ggplot2)
library(cowplot)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
## getting help
?CreateSeuratObject
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD34", "CD38", "MS4A1"), 1:30]
## check at metadata
head(pbmc@meta.data)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
pbmc@meta.data %>% head()
# Visualize QC metrics as a violin plot
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 3000 & percent.mt < 20)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(pbmc), 10)
# plot variable features with and without labels
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2), ncol =1)
cc.genes.updated.2019
s.genes <- cc.genes.updated.2019$s.genes
g2m.genes <- cc.genes.updated.2019$g2m.genes
pbmc <- CellCycleScoring(pbmc, s.features = s.genes, g2m.features = g2m.genes)
table(pbmc[[]]$Phase)
library(stats)
x <- matrix(1:15, ncol = 3)
x
## scale works in a column-wise fashion
centered.x <- scale(x, scale = FALSE)
centered.x
## variance is 1
centered.scaled.x <- scale(x)
cov(centered.scaled.x)
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt","S.Score","G2M.Score")
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt","S.Score","G2M.Score")
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt")
library(stats)
x <- matrix(1:15, ncol = 3)
x
## scale works in a column-wise fashion
centered.x <- scale(x, scale = FALSE)
centered.x
## variance is 1
centered.scaled.x <- scale(x)
cov(centered.scaled.x)
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt")
# raw counts, same as pbmc@assays$RNA@counts[1:6, 1:6]
pbmc[["RNA"]]$counts[1:6, 1:6]
# library size normalized and log transformed data
pbmc[["RNA"]]$data[1:6, 1:6]
# scaled data
pbmc[["RNA"]]$scale.data[1:6, 1:6]
pbmc <- RunPCA(pbmc, features = c("CD5" , "CD69" , "TAGLN2", "ITGAX"  , "CD19" , "FCRL5" , "TBET","CD27" , "CD38", "CD72" , "FCRL5" , "ITGAX" , "LILRB2", "CD11C" ,"CD19" ,  "FCRL5" , "TBET","CD19" , "IGD" , "MTG", "CD38" , "MKI67" , "MZB1", "MS4A1" , "NEIL1" , "CD10" , "CD74" , "CD79A" , "CD83" , "HLA-DPB1" , "HLA-DRA" , "HLA-DRB1","CD19"  , "CD27" , "IGD" , "IGM", "CD37" , "CD74" , "CD79A" , "HLA-DRA" , "IGHM" , "LYN", "AIM2" , "CD19" , "CD20" , "CD21" , "CD27" , "CD79A" , "IGD" , "JCHAIN" , "MS4A1","BCL7A" , "CD11C" , "CD19"  , "CD27" , "CD38" , "CD79A" , "FCER2" , "FCRL5" , "IGD" , "IGHD" , "IGHM" , "IGM" , "IL4R" , "MS4A1" , "PAX5" , "TCL1A", "CD19" , "CD27", "CD19" , "CD27" , "IGD" , "IGM"), verbose = FALSE)
p1<- DimPlot(pbmc, reduction = "pca")
p1
library(tidyverse)
library(Seurat)
library(clustifyr)
library(ggplot2)
library(cowplot)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
## getting help
?CreateSeuratObject
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD34", "CD38", "MS4A1"), 1:30]
## check at metadata
head(pbmc@meta.data)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
pbmc@meta.data %>% head()
# Visualize QC metrics as a violin plot
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 3000 & percent.mt < 20)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(pbmc), 10)
# plot variable features with and without labels
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2), ncol =1)
cc.genes.updated.2019
s.genes <- cc.genes.updated.2019$s.genes
g2m.genes <- cc.genes.updated.2019$g2m.genes
pbmc <- CellCycleScoring(pbmc, s.features = s.genes, g2m.features = g2m.genes)
table(pbmc[[]]$Phase)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/filtered_feature_bc_matrix")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k")
pbmc
## getting help
?CreateSeuratObject
# Lets examine a few B cell marker genes in the first thirty cells
pbmc.data[c("CD19", "CD34", "CD38", "MS4A1"), 1:30]
## check at metadata
head(pbmc@meta.data)
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
pbmc@meta.data %>% head()
# Visualize QC metrics as a violin plot
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 3000 & percent.mt < 20)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(pbmc), 10)
# plot variable features with and without labels
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
CombinePlots(plots = list(plot1, plot2), ncol =1)
cc.genes.updated.2019
s.genes <- cc.genes.updated.2019$s.genes
g2m.genes <- cc.genes.updated.2019$g2m.genes
pbmc <- CellCycleScoring(pbmc, s.features = s.genes, g2m.features = g2m.genes)
table(pbmc[[]]$Phase)
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt")
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- ScaleData(pbmc, vars.to.regress = "percent.mt", "S.Score","G2M.Score")
library(Seurat)
library(tidyverse)
library(SingleR)
library(dplyr)
library(celldex)
library(RColorBrewer)
library(SingleCellExperiment)
# this returns a seurat object
pbmc<- readRDS("/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/pbmc_3k.RDS")
pbmc
p1<- DimPlot(pbmc, reduction = "umap", label = TRUE, pt.size = 2 ,label.size = 8)
p2<- DimPlot(pbmc, reduction = "tsne", label = TRUE, pt.size = 2 ,label.size = 8)
p1+p2
source("R/pipeline.R")
source("pipeline.R")
source("pipeline.R")
`%>%` <- magrittr::`%>%`
### Assign new name for analysis step
obj <- pbmc
library(Seurat)
library(tidyverse)
library(SingleR)
library(dplyr)
library(celldex)
library(RColorBrewer)
library(SingleCellExperiment)
# this returns a seurat object
pbmc<- readRDS("/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/pbmc_3k.RDS")
pbmc
p1<- DimPlot(pbmc, reduction = "umap", label = TRUE, pt.size = 2 ,label.size = 8)
p2<- DimPlot(pbmc, reduction = "tsne", label = TRUE, pt.size = 2 ,label.size = 8)
p1+p2
ncol(pbmc)
pbmc <- SCTransform(pbmc, method = "glmGamPoi", ncells = 2456,
vars.to.regress = c("percent.mt","S.Score","G2M.Score"), verbose = F)
BiocManager::install('glmGamPoi')
Yes
library(Seurat)
library(tidyverse)
library(SingleR)
library(dplyr)
library(celldex)
library(RColorBrewer)
library(SingleCellExperiment)
# this returns a seurat object
pbmc<- readRDS("/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/pbmc_3k.RDS")
pbmc
p1<- DimPlot(pbmc, reduction = "umap", label = TRUE, pt.size = 2 ,label.size = 8)
p2<- DimPlot(pbmc, reduction = "tsne", label = TRUE, pt.size = 2 ,label.size = 8)
p1+p2
# find number of cells for SCTransform
ncol(pbmc)
library(Seurat)
library(tidyverse)
library(SingleR)
library(dplyr)
library(celldex)
library(RColorBrewer)
library(SingleCellExperiment)
# this returns a seurat object
pbmc<- readRDS("/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/pbmc_3k.RDS")
pbmc
p1<- DimPlot(pbmc, reduction = "umap", label = TRUE, pt.size = 2 ,label.size = 8)
p2<- DimPlot(pbmc, reduction = "tsne", label = TRUE, pt.size = 2 ,label.size = 8)
p1+p2
# find number of cells for SCTransform
ncol(pbmc)
pbmc <- SCTransform(pbmc, method = "glmGamPoi", ncells = 2456,
vars.to.regress = c("percent.mt","S.Score","G2M.Score"), verbose = F)
library(tidyverse)
library(Seurat)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/filtered_feature_bc_matrix")
saveRDS(pbmc, pbmc_3k_pre_process.RDS)
saveRDS(pbmc, "pbmc_3k_pre_process.RDS")
# this returns the seurat pre_processed object
pbmc<- readRDS("/Users/hawacoulibaly/Documents/GitHub/scHumanBcellFlu/data/pbmc_3k_pre_process.RDS")
pbmc
library(tidyverse)
library(Seurat)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/filtered_feature_bc_matrix")
library(tidyverse)
library(Seurat)
# Load the PBMC dataset
pbmc.data <- Read10X(data.dir = "/Users/hawacoulibaly/Documents/filtered_feature_bc_matrix")
